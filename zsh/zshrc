
# If not running interactively, don't do anything
[[ $- != *i* ]] && return


# Functions
####################
function mkdir_cd {
    mkdir $1 && cd $1;
}

function clean_cache {
    sync
    su -c "echo 3 > /proc/sys/vm/drop_caches"
}

function _compile_global_opt {
    echo -O2 -Wall -Werror -Wextra -pedantic -D_POSIX_SOURCE -pthread
}

function compile_c++_options {
    compilator=$1
    binary=$2
    shift; shift
    $compilator -std=c++11 `_compile_global_opt` -o $binary $*
}

function compile_c++_options_debug {
    compilator=$1
    binary=$2
    shift; shift
    $compilator -g -std=c++11 `_compile_global_opt` -o $binary $*
}

function compile_options {
    compilator=$1
    binary=$2
    shift; shift
    $compilator -std=c11 `_compile_global_opt` -o $binary $*
}

function compile_options_debug {
    compilator=$1
    binary=$2
    shift; shift
    $compilator -g -std=c11 `_compile_global_opt` -o $binary $*
}

function devour {
    id=$(xdo id)
    xdo hide
    $("$@")
    xdo show "$id"
}

function reboot-windows {
    sudo grub-set-default "`awk -F\' '/menuentry / {print $2}' /boot/grub/grub.cfg  | rg -m 1 Windows`"
    reboot
}

function reptyr_authorization {
    ORIG_VALUE=`cat /proc/sys/kernel/yama/ptrace_scope`
    echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope > /dev/null
    reptyr $@
    echo "$ORIG_VALUE" | sudo tee /proc/sys/kernel/yama/ptrace_scope > /dev/null
}

function search_note {
    python ~/.vim/plugged/vim-notes/misc/notes/search-notes.py \
        -n ~/.vim/plugged/vim-notes/misc/notes/user/ \
        -d ~/.vim/plugged/vim-notes/misc/notes/index.pickle \
        -i $@
}

function _sshag {
    [[ "$SSH_AGENT_PID" ]] || eval $(ssh-agent -t 3600);
    ssh-add ~/.ssh/id_rsa
}


# Alias
####################

# One-key aliases
alias e='exit'
alias d='devour'
alias g='git'
alias l='ls'
alias mtrg='mtr 8.8.8.8'
alias mtrg6='mtr 2001:4860:4860::8888'
alias n='newterm'
alias o='xdg-open'
alias p='ping'
alias pg='ping 8.8.8.8'
alias pg6='ping 2001:4860:4860::8888'

alias cp='cp -r --reflink=auto'
alias free='free -h'
alias gitlog='git log --color'
alias grep='grep --color'
alias hibernate='systemctl hibernate'
alias ll='ls -alh'
alias ls='ls --color=auto'
alias makepkgless='makepkg --config /etc/makepkg_less.conf'
alias maj='systemd-run -t -p CPUWeight=20 -p CPUQuota=3000% --user -- sudo emerge -uDU --ask --keep-going --newrepo --with-bdeps=y -j 5 --load-average=20 @world && sudo emerge --depclean && sudo eclean-dist --deep'
alias majsync='sudo emerge --sync; sudo layman -S; sudo eix-update'
alias mkcd='mkdir_cd '
alias mtr='mtr -o "LSR NABWV"'
alias obsolete_pkg='eix-test-obsolete'
alias clean_obsolete_pkg='portpeek'
alias private=' unset HISTFILE; _zoxide_hook(){}'
alias reptyr='reptyr_authorization ' # Set the kernel to authorize ptracing
alias sshnocheck='ssh -o StrictHostKeyChecking=no '
alias sshag='_sshag'
alias sudo='sudo ' # Make aliases work with sudo

if hash nvim 2>/dev/null; then
    alias v='nvim '
    alias vn='nvim note:notepad'
    alias vim='nvim '
else
    alias v='vim '
    alias vn='vim note:notepad'
fi

# Firefox
alias firefox-clean='firefox -p clean -no-remote'

# Compile
alias clang++o='compile_c++_options clang++ '
alias clang++od='compile_c++_options_debug clang++ '
alias clango='compile_options clang '
alias clangod='compile_options_debug clang '
alias g++o='compile_c++_options g++ '
alias g++od='compile_c++_options_debug g++ '
alias gcco='compile_options gcc '
alias gccod='compile_options_debug gcc '

# Alacritty
alias newterm='alacritty&; disown %alacritty'


# XModMap
####################

#xmodmap /home/anthony/.xmodmap.conf


# HISTORIQUE
####################
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt hist_ignore_all_dups
setopt sharehistory

# Other
####################

autoload -U colors && colors
# Allow extended regex
setopt extendedglob

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ":completion:*:commands" rehash 1 menu select
zstyle :compinstall filename '/home/anthony/.zshrc'

# Syntax highlighting
if [ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
    then source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Autojump
if [ -f /etc/profile.d/autojump.sh ]
    then source /etc/profile.d/autojump.sh
fi

autoload -Uz compinit promptinit
compinit
promptinit

# Walter theme modified: username is green if normal user, red if root
# prompt walter
PROMPT="%B%(?..[%?] )%b%{%(#~$fg[red]~$fg[cyan])%}%n%{$reset_color%}%{$fg[green]%}@%U%m%u> %{$reset_color%}"
RPROMPT="%F{green}%~%f"

# If no terminfo is defined, default to xterm-256color
[[ ! `infocmp -U $TERM 2> /dev/null` ]] && export TERM="xterm-256color"

if hash nvim 2>/dev/null; then
    export EDITOR=nvim
    export DIFFPROG="nvim -d"
else
    export EDITOR=vim
fi

export GIT_EDITOR=$EDITOR
if [ -f ~/.dir_colors/dircolors ]
    then eval `dircolors ~/.dir_colors/dircolors`
fi

# Enable vim-mode
bindkey -v

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt hist_ignore_space


# Special keys solution
####################

# Change this value if the timeout is too short (default to 40, for 0.4s)
KEYTIMEOUT=20

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
bindkey "^[[3~"  delete-char
bindkey '^?' backward-delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# Ctrl + right
bindkey "^[[1;5C" forward-word

# Ctrl + left
bindkey "^[[1;5D" backward-word

# Shift + Tab
bindkey "^[[Z" reverse-menu-complete

# Ctrl + Delete
bindkey "^[[3;5~" kill-word

# History
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward

# Maj vim-mode on jk
bindkey -M viins 'jk' vi-cmd-mode

# Fix de ^M bug when typing "enter" sometimes
stty icrnl

export PATH=~/.local/bin:$PATH

# Source local options if any
if [ -f ~/.zshrc.local ]
    then source ~/.zshrc.local
fi

# Cargo
if [ -f ~/.cargo/env ]; then
    source ~/.cargo/env
fi

# FZF
if [ -f /usr/share/fzf/key-bindings.zsh ]
    then source /usr/share/fzf/key-bindings.zsh
fi

# Zoxide
if hash zoxide 2>/dev/null; then
    eval "$(zoxide init zsh)"

    zoxide-query-widget () {
        FZF_DEFAULT_OPTS="--height 40%" zi
        local ret=$?
        zle reset-prompt
        return $ret
    }
    zle -N zoxide-query-widget

    # Search and jump to dir with zoxide
    bindkey '^F' zoxide-query-widget

    # Jump to child directory.
    alias zc='z `pwd`'
fi
